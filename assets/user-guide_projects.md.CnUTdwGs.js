import{_ as t,c as o,o as i,ae as r}from"./chunks/framework.ByZK1MkX.js";const u=JSON.parse('{"title":"Projects","description":"","frontmatter":{},"headers":[],"relativePath":"user-guide/projects.md","filePath":"user-guide/projects.md"}'),a={name:"user-guide/projects.md"};function n(s,e,l,c,d,p){return i(),o("div",null,e[0]||(e[0]=[r('<h1 id="projects" tabindex="-1">Projects <a class="header-anchor" href="#projects" aria-label="Permalink to &quot;Projects&quot;">​</a></h1><p>This page contains detailed information about managing projects in SCIENTRY.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Projects are the top-level containers in SCIENTRY that organize your research data. Each project can contain multiple models and has its own access control settings.</p><h3 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h3><ul><li>Create and manage project containers</li><li>Set project-level permissions</li><li>Archive completed projects</li><li>Track project versions</li></ul><h2 id="project-creation-and-versioning" tabindex="-1">Project Creation and Versioning <a class="header-anchor" href="#project-creation-and-versioning" aria-label="Permalink to &quot;Project Creation and Versioning&quot;">​</a></h2><p>When creating a project, the project version is a mandatory attribute that helps you track different iterations of your research work.</p><h3 id="project-versioning-system" tabindex="-1">Project Versioning System <a class="header-anchor" href="#project-versioning-system" aria-label="Permalink to &quot;Project Versioning System&quot;">​</a></h3><p>SCIENTRY supports project versioning to help you manage different iterations of the same research project. This is particularly useful when you need to:</p><ul><li>Create variations of an existing project</li><li>Maintain different versions for different experiments</li><li>Track project evolution over time</li><li>Share project templates with team members</li></ul><h3 id="using-existing-projects-as-templates" tabindex="-1">Using Existing Projects as Templates <a class="header-anchor" href="#using-existing-projects-as-templates" aria-label="Permalink to &quot;Using Existing Projects as Templates&quot;">​</a></h3><p>When creating a new project, if you type the name of an existing project, SCIENTRY will detect this and offer you the option to use that project as a template:</p><ol><li><strong>Template Detection</strong>: As you type the project name, if it matches an existing project, a card will appear offering to use it as a template</li><li><strong>Template Selection</strong>: Click on the template card to automatically populate the new project with: <ul><li>The same description as the original project</li><li>All models from the original project (with their attributes and configurations)</li><li>The same access control settings</li></ul></li><li><strong>Version Requirement</strong>: When using a template, you <strong>must</strong> change the version number. This ensures that: <ul><li>Each project version has a unique identifier</li><li>You can track which version was based on which template</li><li>The system can distinguish between different iterations</li></ul></li></ol><h3 id="version-naming-conventions" tabindex="-1">Version Naming Conventions <a class="header-anchor" href="#version-naming-conventions" aria-label="Permalink to &quot;Version Naming Conventions&quot;">​</a></h3><p>While SCIENTRY doesn&#39;t enforce a specific versioning scheme, common practices include:</p><ul><li><strong>Semantic Versioning</strong>: <code>1.0.0</code>, <code>1.1.0</code>, <code>2.0.0</code></li><li><strong>Date-based</strong>: <code>2024.01</code>, <code>2024.02</code>, <code>2024.03</code></li><li><strong>Experiment-based</strong>: <code>v1-control</code>, <code>v1-treatment</code>, <code>v2-optimized</code></li><li><strong>Simple numbering</strong>: <code>v1</code>, <code>v2</code>, <code>v3</code></li></ul><h3 id="benefits-of-project-versioning" tabindex="-1">Benefits of Project Versioning <a class="header-anchor" href="#benefits-of-project-versioning" aria-label="Permalink to &quot;Benefits of Project Versioning&quot;">​</a></h3><ul><li><strong>Data Integrity</strong>: Each version maintains its own data and configurations</li><li><strong>Experiment Tracking</strong>: Easily compare results between different project versions</li><li><strong>Collaboration</strong>: Team members can work on different versions simultaneously</li><li><strong>Backup and Recovery</strong>: Previous versions serve as backups of your work</li><li><strong>Template Sharing</strong>: Create standardized project templates for your research group</li></ul><h3 id="example-workflow" tabindex="-1">Example Workflow <a class="header-anchor" href="#example-workflow" aria-label="Permalink to &quot;Example Workflow&quot;">​</a></h3><ol><li><strong>Create Initial Project</strong>: Create &quot;Genetic Analysis Study&quot; with version &quot;1.0.0&quot;</li><li><strong>Add Models</strong>: Define Sample, Experiment, and Analysis models</li><li><strong>Create New Version</strong>: Use the project as a template to create &quot;Genetic Analysis Study&quot; version &quot;1.1.0&quot;</li><li><strong>Modify New Version</strong>: Add new attributes or modify existing models as needed</li><li><strong>Compare Results</strong>: Both versions maintain their own data and can be compared</li></ol><h3 id="important-notes" tabindex="-1">Important Notes <a class="header-anchor" href="#important-notes" aria-label="Permalink to &quot;Important Notes&quot;">​</a></h3><ul><li><strong>Unique Version Requirement</strong>: You cannot create two projects with the same name and version</li><li><strong>Independent Data</strong>: Each project version maintains its own records and data</li><li><strong>Template Inheritance</strong>: When using a template, all models and their configurations are copied, but data is not transferred</li><li><strong>Access Control</strong>: Each project version can have different access control settings</li></ul>',23)]))}const m=t(a,[["render",n]]);export{u as __pageData,m as default};
